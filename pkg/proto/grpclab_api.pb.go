// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpclab_api.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01fdb507d7f20fe0, []int{0}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RegisterResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01fdb507d7f20fe0, []int{1}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RegisterResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type ChangePasswordRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	OldPassword          string   `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword          string   `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01fdb507d7f20fe0, []int{2}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangePasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ChangePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type ChangePasswordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordResponse) Reset()         { *m = ChangePasswordResponse{} }
func (m *ChangePasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordResponse) ProtoMessage()    {}
func (*ChangePasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01fdb507d7f20fe0, []int{3}
}

func (m *ChangePasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordResponse.Unmarshal(m, b)
}
func (m *ChangePasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordResponse.Marshal(b, m, deterministic)
}
func (m *ChangePasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordResponse.Merge(m, src)
}
func (m *ChangePasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordResponse.Size(m)
}
func (m *ChangePasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*LoginResponse)(nil), "grpclab.LoginResponse")
	proto.RegisterType((*RegisterResponse)(nil), "grpclab.RegisterResponse")
	proto.RegisterType((*ChangePasswordRequest)(nil), "grpclab.ChangePasswordRequest")
	proto.RegisterType((*ChangePasswordResponse)(nil), "grpclab.ChangePasswordResponse")
}

func init() {
	proto.RegisterFile("grpclab_api.proto", fileDescriptor_01fdb507d7f20fe0)
}

var fileDescriptor_01fdb507d7f20fe0 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x4e, 0xea, 0x40,
	0x14, 0xc6, 0x53, 0x6e, 0xf8, 0x37, 0xdc, 0x4b, 0x60, 0x2e, 0x90, 0x5a, 0x8d, 0xe2, 0xac, 0x90,
	0x05, 0x4d, 0x74, 0xc7, 0x4e, 0x31, 0x51, 0x13, 0x16, 0x58, 0x77, 0x6e, 0xc8, 0xd0, 0x9e, 0xd4,
	0x26, 0x75, 0x66, 0x9c, 0x19, 0x24, 0x6c, 0x7d, 0x05, 0x5f, 0xc0, 0x77, 0xf2, 0x15, 0x7c, 0x10,
	0xc3, 0x30, 0x2d, 0x81, 0x48, 0x5c, 0x35, 0xe7, 0x3b, 0xdf, 0xf9, 0x9d, 0x9c, 0xaf, 0x83, 0x9a,
	0xb1, 0x14, 0x61, 0x4a, 0x67, 0x53, 0x2a, 0x92, 0x81, 0x90, 0x5c, 0x73, 0x5c, 0xb6, 0x92, 0x77,
	0x14, 0x73, 0x1e, 0xa7, 0xe0, 0x53, 0x91, 0xf8, 0x94, 0x31, 0xae, 0xa9, 0x4e, 0x38, 0x53, 0x6b,
	0x9b, 0xf7, 0x3f, 0x9b, 0xd4, 0x4b, 0x01, 0x56, 0x24, 0x67, 0xe8, 0xdf, 0x98, 0xc7, 0x09, 0x0b,
	0x40, 0x09, 0xce, 0x14, 0x60, 0x17, 0x95, 0xd5, 0x3c, 0x0c, 0x41, 0x29, 0xd7, 0xe9, 0x3a, 0xbd,
	0x4a, 0x90, 0x95, 0xe4, 0x1a, 0x35, 0x02, 0x88, 0x13, 0xa5, 0x41, 0xfe, 0xee, 0xc6, 0x1d, 0x54,
	0x92, 0x40, 0x15, 0x67, 0x6e, 0xa1, 0xeb, 0xf4, 0xaa, 0x81, 0xad, 0xc8, 0x12, 0xb5, 0x47, 0x4f,
	0x94, 0xc5, 0x30, 0xa1, 0x4a, 0x2d, 0xb8, 0x8c, 0x02, 0x78, 0x99, 0x83, 0xd2, 0xd8, 0x43, 0x95,
	0xb9, 0x02, 0xc9, 0xe8, 0x33, 0x18, 0x56, 0x35, 0xc8, 0x6b, 0x7c, 0x8a, 0xfe, 0xf2, 0x34, 0x9a,
	0x0a, 0x3b, 0x62, 0x91, 0x35, 0x9e, 0x46, 0x19, 0x65, 0x65, 0x61, 0xb0, 0xd8, 0x58, 0xfe, 0xac,
	0x2d, 0x0c, 0x16, 0x99, 0x85, 0xb8, 0xa8, 0xb3, 0xbb, 0x7a, 0x7d, 0xc6, 0xf9, 0x47, 0x01, 0x35,
	0x6f, 0x82, 0xc9, 0x68, 0x4c, 0x67, 0x97, 0x93, 0xbb, 0x07, 0x90, 0xaf, 0x49, 0x08, 0xf8, 0x1e,
	0x55, 0xb2, 0x83, 0x71, 0x6b, 0x60, 0xd3, 0x1b, 0x8c, 0x24, 0x44, 0xc0, 0x74, 0x42, 0x53, 0xe5,
	0x1d, 0xe4, 0xea, 0x6e, 0x32, 0xa4, 0xf5, 0xf6, 0xf9, 0xf5, 0x5e, 0xa8, 0x93, 0xaa, 0x2f, 0x6d,
	0x6b, 0xe8, 0xf4, 0xf1, 0x2d, 0x2a, 0x9a, 0xb8, 0xf7, 0xf0, 0x3a, 0xb9, 0xba, 0xf5, 0x53, 0x48,
	0xd3, 0xc0, 0x6a, 0xa4, 0xe4, 0xa7, 0x2b, 0x7d, 0x45, 0x62, 0xa8, 0xbe, 0x7d, 0x0c, 0x3e, 0xde,
	0x20, 0x7f, 0x0a, 0xd8, 0x3b, 0xd9, 0xdb, 0xb7, 0x5b, 0x0e, 0xcd, 0x96, 0x36, 0x69, 0xf8, 0xa1,
	0x31, 0xe4, 0x61, 0x0e, 0x9d, 0xfe, 0x55, 0xf9, 0xb1, 0x68, 0x5e, 0xcc, 0xac, 0x64, 0x3e, 0x17,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x66, 0xe7, 0xd2, 0xc2, 0x89, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GRPCLabAPIServiceClient is the client API for GRPCLabAPIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GRPCLabAPIServiceClient interface {
	Register(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*RegisterResponse, error)
	Login(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*LoginResponse, error)
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error)
}

type gRPCLabAPIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGRPCLabAPIServiceClient(cc grpc.ClientConnInterface) GRPCLabAPIServiceClient {
	return &gRPCLabAPIServiceClient{cc}
}

func (c *gRPCLabAPIServiceClient) Register(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/grpclab.GRPCLabAPIService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCLabAPIServiceClient) Login(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/grpclab.GRPCLabAPIService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCLabAPIServiceClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error) {
	out := new(ChangePasswordResponse)
	err := c.cc.Invoke(ctx, "/grpclab.GRPCLabAPIService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GRPCLabAPIServiceServer is the server API for GRPCLabAPIService service.
type GRPCLabAPIServiceServer interface {
	Register(context.Context, *Credentials) (*RegisterResponse, error)
	Login(context.Context, *Credentials) (*LoginResponse, error)
	ChangePassword(context.Context, *ChangePasswordRequest) (*ChangePasswordResponse, error)
}

// UnimplementedGRPCLabAPIServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGRPCLabAPIServiceServer struct {
}

func (*UnimplementedGRPCLabAPIServiceServer) Register(ctx context.Context, req *Credentials) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedGRPCLabAPIServiceServer) Login(ctx context.Context, req *Credentials) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedGRPCLabAPIServiceServer) ChangePassword(ctx context.Context, req *ChangePasswordRequest) (*ChangePasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}

func RegisterGRPCLabAPIServiceServer(s *grpc.Server, srv GRPCLabAPIServiceServer) {
	s.RegisterService(&_GRPCLabAPIService_serviceDesc, srv)
}

func _GRPCLabAPIService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCLabAPIServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpclab.GRPCLabAPIService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCLabAPIServiceServer).Register(ctx, req.(*Credentials))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCLabAPIService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCLabAPIServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpclab.GRPCLabAPIService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCLabAPIServiceServer).Login(ctx, req.(*Credentials))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCLabAPIService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCLabAPIServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpclab.GRPCLabAPIService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCLabAPIServiceServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GRPCLabAPIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpclab.GRPCLabAPIService",
	HandlerType: (*GRPCLabAPIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _GRPCLabAPIService_Register_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _GRPCLabAPIService_Login_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _GRPCLabAPIService_ChangePassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpclab_api.proto",
}
